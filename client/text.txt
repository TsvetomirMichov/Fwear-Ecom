import React from "react";
import { useState } from "react";
import { useParams } from "react-router-dom";
import List from "../../components/List/List";
import useFetch from "../../hooks/useFetch";
import "./Products.scss";
import ProductsImage from "../../assets/b1.jpg"
import { Box, Grid, Typography } from "@mui/material";
import styled from "@emotion/styled";

const Products = () => {
  const catType = useParams().type;
  console.log(catType);
  const [maxPrice, setMaxPrice] = useState(1000);
  const [sort, setSort] = useState(null);
  const [selectedSubCats, setSelectedSubCats] = useState([]);

  const { data, loading, error } = useFetch(
    `/sub-categories?[filters][categories][type][$eq]=${catType}`
  );
  //   filters[categories][id][$eq]=${catId}

  const handleChange = (e) => {
    const value = e.target.value;
    const isChecked = e.target.checked;

    setSelectedSubCats(
      isChecked
        ? [...selectedSubCats, value]
        : selectedSubCats.filter((item) => item !== value)
    );
  };

  const BoxImg = styled(Box)(() => ({
    flex: 3,
  }))

  const BoxRight = styled(Box)(() => ({
    display:'flex',
    flexDirection:'column',
    flex: 3,
    height: "18.75em",
    textAlign: "center",
    textJustify: "center",
  }))

  return (
    <div className="products">
      <div className="left">
        <div className="filterItem">
          <h2>Product Categories</h2>
          {data?.map((item) => (
            <div className="inputItem" key={item.id}>
              <input
                type="checkbox"
                id={item.id}
                value={item.id}
                onChange={handleChange}
              />
              <label htmlFor={item.id}>{item.attributes.title}</label>
            </div>
          ))}
        </div>
        <div className="filterItem">
          <h2>Filter by price</h2>
          <div className="inputItem">
            <span>0</span>
            <input
              type="range"
              min={0}
              max={1000}
              onChange={(e) => setMaxPrice(e.target.value)}
            />
            <span>{maxPrice}</span>
          </div>
        </div>
        <div className="filterItem">
          <h2>Sort by</h2>
          <div className="inputItem">
            <input
              type="radio"
              id="asc"
              value="asc"
              name="price"
              onChange={(e) => setSort("asc")}
            />
            <label htmlFor="asc">Price (Lowest first)</label>
          </div>
          <div className="inputItem">
            <input
              type="radio"
              id="desc"
              value="desc"
              name="price"
              onChange={(e) => setSort("desc")}
            />
            <label htmlFor="desc">Price (Highest first)</label>
          </div>
        </div>
      </div>
      <BoxRight className="right">
        {/* <img
          className="catImg"
          src={ProductsImage}
          alt=""
        /> */}
        <BoxImg>
          <Box component='img' sx={{
            content: {
              xs: `url(${ProductsImage})`, //img src from xs up to md

            },
            width: '100%',
            height: 300,
            objectFit: 'cover',
            marginBottom: "3.125em"

          }} />
          <Box  >
            <Typography>
              #stayhome
            </Typography>
            <Typography>
              Save more with coupons & up to 70% off!
            </Typography>
          </Box>
        </BoxImg>
        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>
          <Grid
            item xs={4} sm={4} md={3} lg={3} xl={3} flexBasis={{ sm: 'flex-col', md: 'flex-col' }}>
            <List catType={catType} maxPrice={maxPrice} sort={sort} subCats={selectedSubCats} />
          </Grid>
        </Grid>
      </BoxRight>
    </div>
  );
};

export default Products;
